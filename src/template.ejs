<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="stylesheet" href="https://unpkg.com/purecss@2.0.3/build/pure-min.css" crossorigin="anonymous">

  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" crossorigin="anonymous">

  <link rel="shortcut icon" href="https://raw.githubusercontent.com/benc-uk/k6-reporter/main/assets/icon.png"
    type="image/png">

  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>K6 API Tests: <%= title %>
  </title>
  <style>
    body {
      margin: 1rem;
    }

    footer {
      float: right;
      font-size: 0.8rem;
      color: #777;
    }

    footer a {
      text-decoration: none;
      color: #777;
    }

    .failed {
      background-color: #ff6666 !important;
    }

    .good {
      background-color: #3abe3a !important;
    }

    td.failed {
      font-weight: bold;
    }

    h2 {
      padding-bottom: 4px;
      border-bottom: solid 3px #cccccc;
    }

    .tabs {
      display: flex;
      flex-wrap: wrap;
    }

    .tabs label {
      order: 1;
      display: block;
      padding: 1rem 2rem;
      margin-right: 0.2rem;
      cursor: pointer;
      color: #666;
      background: #ddd;
      font-weight: bold;
      font-size: 1.2rem;
      flex: 1 1;
      transition: background ease 0.2s;
      border-top-left-radius: 0.3rem;
      border-top-right-radius: 0.3rem;
      border-color: #ccc;
      border-style: solid;
      border-width: 2px 2px 0px;
      box-shadow: inset 0px -3px 7px -1px rgba(0, 0, 0, 0.33);
    }

    .tabs .tab {
      order: 99;
      flex-grow: 1;
      width: 100%;
      display: none;
      padding: 1rem;
      background: #fff;
    }

    .tabs input[type="radio"] {
      display: none;
    }

    .tabs input[type="radio"]:checked+label {
      background: #fff;
      box-shadow: none;
      color: #000;
    }

    .tabs input[type="radio"]:checked+label+.tab {
      display: block;
    }

    .box {
      flex: 1 1;
      border-radius: 0.3rem;
      background-color: #3abe3a;
      margin: 1rem;
      padding: 0.5rem;
      font-size: 2vw;
      box-shadow: 0px 4px 7px -1px rgba(0, 0, 0, 0.49);
      color: white;
      position: relative;
      overflow: hidden;
    }

    .box h4 {
      margin: 0;
      padding-bottom: 0.5rem;
      text-align: center;
      position: relative;
      z-index: 50;
    }

    .row {
      display: flex;
    }

    .row div {
      flex: 1 1;
      text-align: center;
      margin-bottom: 0.5rem;
    }

    .bignum {
      position: relative;
      font-size: min(6vw, 80px);
      z-index: 20;
    }

    table {
      font-size: min(2vw, 22px);
      width: 100%;
    }

    table.requests {
      border-collapse: collapse;
      table-layout: fixed;
    }

    table.requests td:first-child {
      text-align: center;
    }

    table.requests tr {
      word-wrap: break-word;
    }

    .expand-indicator {
      cursor: pointer;
    }

    .icon {
      position: absolute;
      top: 60%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: #0000002d;
      font-size: 8vw;
      z-index: 1;
    }

    .metricbox {
      background-color: #5697e2;
      font-size: 3vw;
      height: auto;
    }

    .metricbox .row {
      position: relative;
      z-index: 20;
    }

    .totalbox {
      background-color: #5697e2;
      flex: 1 1;
      border-radius: 0.3rem;
      margin: 1rem;
      padding: 0.5rem;
      font-size: 2vw;
      box-shadow: 0px 4px 7px -1px rgba(0, 0, 0, 0.49);
      color: white;
      position: relative;
      overflow: hidden;
    }

    .totalbox h4 {
      margin: 0;
      padding-bottom: 0.5rem;
      text-align: center;
      position: relative;
      z-index: 50;
    }
  </style>
</head>

<body>
  <h1>
    <svg style="vertical-align:middle" width="50" height="45" viewBox="0 0 50 45" fill="none"
      class="footer-module--logo--_lkxx">
      <path
        d="M31.968 34.681a2.007 2.007 0 002.011-2.003c0-1.106-.9-2.003-2.011-2.003a2.007 2.007 0 00-2.012 2.003c0 1.106.9 2.003 2.012 2.003z"
        fill="#7D64FF"></path>
      <path
        d="M39.575 0L27.154 16.883 16.729 9.31 0 45h50L39.575 0zM23.663 37.17l-2.97-4.072v4.072h-2.751V22.038l2.75 1.989v7.66l3.659-5.014 2.086 1.51-3.071 4.21 3.486 4.776h-3.189v.001zm8.305.17c-2.586 0-4.681-2.088-4.681-4.662 0-1.025.332-1.972.896-2.743l4.695-6.435 2.086 1.51-2.239 3.07a4.667 4.667 0 013.924 4.6c0 2.572-2.095 4.66-4.681 4.66z"
        fill="#7D64FF"></path>
    </svg>
    &nbsp; K6 API Tests: <%= title %>
  </h1>

  <div class="row">
    <div class="totalbox">
      <i class="fas fa-globe icon"></i>
      <h4>Total Requests</h4>
      <div class="bignum">
        <% if(data.metrics.http_reqs) { %>
          <%= data.metrics.http_reqs.values.count %>
            <% } %>
      </div>
      <div class="bignum">
        <% if(data.metrics.grpc_reqs) { %>
          <%= data.metrics.grpc_reqs.values.count %>
            <% } %>
      </div>
    </div>
    <% if(data.metrics.http_req_failed && data.metrics.http_req_failed.values) { %>
      <div class="box <% if(data.metrics.http_req_failed.values.passes > 0) { %> failed <% } %>">
        <i class="far fa-times-circle icon"></i>
        <h4>Failed Requests</h4>
        <div class="bignum">
          <%= data.metrics.http_req_failed.values.passes %>
        </div>
      </div>
      <% } %>
        <div class="totalbox">
          <i class="fas fa-chart-bar icon"></i>
          <h4>Total Checks</h4>
          <div class="bignum">
            <%= totalChecks %>
          </div>
        </div>
        <div class="box <% if(checkFailures > 0) { %> failed <% } %>">
          <i class="far fa-times-circle icon"></i>
          <h4>Failed Checks</h4>
          <div class="bignum">
            <%= checkFailures %>
          </div>
        </div>
  </div>

  <br>

  <div class="tabs">
    <input type="radio" name="tabs" id="tabthree" checked="checked">
    <label for="tabthree"><i class="fas fa-tasks"></i> Checks & Groups</label>
    <div class="tab">
      <% for(group of data.root_group.groups) { %>
        <% if(group.name.includes("setup")) { continue } %>
          <h2>&bull; Group - <%= group.name %>
          </h2>
          <table class="pure-table pure-table-horizontal" style="width: 100%">
            <thead>
              <tr>
                <th>Check Name</th>
                <th>Passes</th>
                <th>Failures</th>
              </tr>
            </thead>
            <% for(check of group.checks) { %>
              <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
                <td width="70%">
                  <%= check.name %>
                </td>
                <td>
                  <%= check.passes %>
                </td>
                <td>
                  <%= check.fails %>
                </td>
              </tr>
              <% } %>
          </table>
          <br>
          <% } %>
            <% if(data.root_group.checks.length> 0) { %>
              <h2>&bull; Other Checks</h2>
              <table class="pure-table pure-table-horizontal" style="width: 100%">
                <thead>
                  <tr>
                    <th>Check Name</th>
                    <th>Passes</th>
                    <th>Failures</th>
                  </tr>
                </thead>
                <% for(check of data.root_group.checks) { %>
                  <tr class="checkDetails <% if(check.fails > 0) { %>failed<% } %>">
                    <td width="70%">
                      <%= check.name %>
                    </td>
                    <td>
                      <%= check.passes %>
                    </td>
                    <td>
                      <%= check.fails %>
                    </td>
                  </tr>
                  <% } %>
              </table>
              <%} %>
    </div>
    <!-- ---- end tab ---- -->
    <% if(data.metrics.http_req_failed.values.passes> 0) { %>
      <input type="radio" name="tabs" id="tabfour">
      <label for="tabfour"><i class="fas fa-exclamation-circle"></i> &nbsp; Failed Checks</label>
      <div class="tab">
        <% function renderFailedCheck(check) { %>
          <thead>
            <tr>
              <th>
                Check Name
              </th>
            </tr>
          </thead>
          <tr class="checkDetails failed">
            <td>
              <%= check.name %>
            </td>
          </tr>
          <% if (check.checks) { for (const subCheck of check.checks) { renderFailedCheck(subCheck); } } %>
            <% } %>
              <% function renderGroup(group) { %>
                <% let hasFailedChecks=false; for (const check of group.checks) { if (check.fails> 0) {
                  hasFailedChecks = true;
                  break;
                  }
                  }
                  if (hasFailedChecks) { %>
                  <h2>&bull; Group - <%= group.name %>
                  </h2>
                  <table class="pure-table pure-table-horizontal" style="width: 100%">
                    <% for (const check of group.checks) { if (check.fails> 0) {
                      renderFailedCheck(check);
                      }
                      } %>
                  </table>
                  <% } %>
                    <% for (const subGroup of group.groups) { renderGroup(subGroup); } %>
                      <% } %>
                        <% for (const group of data.root_group.groups) { renderGroup(group); } %>
                          <% function renderOther() { %>
                            <% let hasFailedChecks=false; for (const check of data.root_group.checks) { if (check.fails>
                              0) {
                              hasFailedChecks = true;
                              break;
                              }
                              }
                              if (hasFailedChecks) { %>
                              <h2>&bull; Other Checks</h2>
                              </h2>
                              <table class="pure-table pure-table-horizontal" style="width: 100%">
                                <% for (const check of data.root_group.checks) { if (check.fails> 0) {
                                  renderFailedCheck(check);
                                  }
                                  } %>
                              </table>
                              <% } %>
                                <% } %>
      </div>
      <% } %>
        <!-- ---- end tab ---- -->

        <% if(data.documents) {%>
          <input type="radio" name="tabs" id="taburls">
          <label for="taburls"><i class="fas fa-minus-circle fa-fw"></i> &nbsp; Failed Requests</label>
          <div class="tab">
            <table class="pure-table pure-table-horizontal requests" style="width: 100%">
              <thead>
                <tr>
                  <th style="width: 5%;"></th>
                  <th style="width: 75%;">URL</th>
                  <th style="width: 10%;">Status</th>
                  <th style="width: 10%;">Duration</th>
                </tr>
              </thead>
              <% for(doc of data.documents) { %>
                <tr class="collapsible">
                  <td><span class="expand-indicator"><i class="far fa-plus-square"></i></span></td>
                  <td>
                    <%=doc.request%>
                  </td>
                  <td>
                    <%=doc.statusCode%>
                  </td>
                  <td>
                    <%=doc.duration%>
                      <div class="expand-content">
                      </div>
                  </td>
                </tr>
                <% } %>
            </table>
          </div>
          <%} %>
            <!-- ---- end tab ---- -->

  </div>
  <footer>K6 Reporter v<%= version %> - Walter Vargas 2024, <a
        href="https://github.com/waltervr/k6-reporter">[GitHub]</a></footer>
</body>
<% if(data.documents) {%>
  <script>
    const expandIndicators = document.querySelectorAll('.expand-indicator');

    expandIndicators.forEach(indicator => {
      let expandedRow = null;

      indicator.addEventListener('click', () => {
        const row = indicator.parentNode.parentNode;
        const expandContent = row.querySelector('.expand-content');

        if (expandedRow) {
          expandedRow.remove();
          expandedRow = null;
          indicator.innerHTML = '<i class="far fa-plus-square"></i>';
          row.classList.remove('expanded');
        } else {
          const newRow = document.createElement('tr');
          newRow.innerHTML = `<td></>
            <td colspan="3"><%=doc.responseBody%></td>`;
          row.after(newRow);
          expandedRow = newRow;
          indicator.innerHTML = '<i class="far fa-minus-square"></i>';

          row.classList.add('expanded');
        }
      });
    });
  </script>
  <%} %>

</html>